{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-aae30ed8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"dashboard-view\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to the Dashboard\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"p\", null, _toDisplayString($data.message), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.updateMessage && $options.updateMessage(...args))\n  }, \"Update Message\"), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fetchData && $options.fetchData(...args))\n  }, \"Fetch Data\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","message","onClick","_cache","args","$options","updateMessage","fetchData"],"sources":["C:\\Users\\dorva\\Desktop\\elior\\eliorinterface\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"dashboard-view\">\r\n    <h1>Welcome to the Dashboard</h1>\r\n    <p>{{ message }}</p>\r\n    <button @click=\"updateMessage\">Update Message</button>\r\n    <button @click=\"fetchData\">Fetch Data</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'DashboardView',\r\n  data() {\r\n    return {\r\n      message: 'This is your dashboard content.',\r\n      fetchedData: '',\r\n    };\r\n  },\r\n  methods: {\r\n    updateMessage() {\r\n      this.message = 'Message updated!';\r\n    },\r\n    fetchData() {\r\n      // Simulate fetching data from an API\r\n      setTimeout(() => {\r\n        this.fetchedData = 'Fetched data from API.';\r\n      }, 1000);\r\n    },\r\n  },\r\n  computed: {\r\n    // You can add computed properties here\r\n  },\r\n  mounted() {\r\n    // Add any initialization logic here\r\n    this.fetchData(); // Fetch data when the component is mounted\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.dashboard-view {\r\n  text-align: center;\r\n  margin: 20px;\r\n}\r\n\r\nbutton {\r\n  margin: 10px;\r\n  padding: 10px 20px;\r\n  background-color: #007bff;\r\n  color: #fff;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAgB;gEACzBC,mBAAA,CAAiC,YAA7B,0BAAwB;;;uBAD9BC,mBAAA,CAKM,OALNC,UAKM,GAJJC,UAAiC,EACjCH,mBAAA,CAAoB,WAAAI,gBAAA,CAAdC,KAAA,CAAAC,OAAO,kBACbN,mBAAA,CAAsD;IAA7CO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;KAAE,gBAAc,GAC7CT,mBAAA,CAA8C;IAArCO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,SAAA,IAAAF,QAAA,CAAAE,SAAA,IAAAH,IAAA,CAAS;KAAE,YAAU,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}